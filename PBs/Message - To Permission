"100601":"<p align=justify><b>IDENTIFICAÇÃO:</b>\n Detecção de uso ilegal de API pelo Trellix Endpoint Security, indicando tentativa ou sucesso de evasão ou execução maliciosa via PowerShell. \n \n <b>ETAPAS DO ATAQUE:</b>\n 1. O atacante pode estar tentando, ou já está tentando, infiltrar-se em máquinas de interesse, explorando vulnerabilidades (ex: phishing, credenciais fracas) ou até mesmo acessando o sistema por meio de contas com privilégios.\n 2. O atacante pode executar comandos PowerShell contornando as políticas de execução, o que permite evitar restrições, manter o shell ativo para persistência e realizar movimentação lateral na rede, alcançando outras máquinas (pivoting).\n 3. É possível que o atacante utilize uma API suspeita ou incomum para injetar código em outros processos, preparar a coleta de informações e executar ações correlatas.\n 4. O atacante busca utilizar comandos legítimos e binários assinados para ocultar a presença do ataque, manter acesso por meio de serviços e tarefas agendadas do Windows e evitar a detecção por soluções antivírus, já que as ações aparentam ser legítimas.\n 5. or fim, o atacante pode executar scripts de Comando e Controle (C2), permitindo a execução de payloads adicionais (como malwares) e a criação de túneis para facilitar outros vetores de ataque.\n \n <b>AVALIAÇÃO:</b>\n [01] - ID da regra: {rule:id} \n [02] - Aviso por e-mail: {rule:mail} \n [03] - Grupo: {rule:groups} \n [04] - Id do Agente: {agent:id}\n [05] - Nome do Agente: {agent:name} \n [06] - Nome do Manager: {manager:name} \n [07] - Nome da Máquina: {data:machine_name}\n [08] - Endereço de Ip: {data:ip.address}\n [09] - Sistema Operacional: {data:os.name}\n [10] - Nome de Usuário: {data:username}\n [11] - Endereço Mac: {data:mac_address}\n [12] - Nome do Produto: {data:product_name}\n [13] - Família do Produto: {data:product_family}\n [14] - Versão do Produto: {data:product_version}\n [15] - Tipo de Analisador: {data:Analyzer}\n [16] - Nome do Analizador: {data:AnalyzerName}\n [17] - Versão do Analisador: {data:AnalyzerVersion}\n [18] - Hostname do Analisador: {data:AnalyzerHostName}\n [19] - Método de Detecção do Analisador: {data:AnalyzerDetectionMethod}\n [20] - Id do Evento: {data:EventID}\n [21] - Severidade do Evento: {data:Severity}\n [22] - Categoria da Ameaça: {data:ThreatCategory}\n [23] - Nome da Ameaça: {data:ThreatName}\n [24] - Tipo da Ameaça: {data:ThreatType}\n [25] - Ação Tomada: {data:ThreatActionTaken}\n [26] - Ameaça Tratada: {data:ThreatHandled}\n [27] - Hostname Alvo: {data:TargetHostName}\n [28] - Username Alvo: {data:TargetUserName}\n [29] - ProcessName Alvo: {data:TargetProcessName}\n [30] - Nome do Alvo: {data:TargetName}\n [31] - Caminho do Alvo: {data:TargetPath}\n [32] - Hash do Alvo: {data:TargetHash}\n [33] - Informações da Máquina : {data:MachineInfo}\n [34] - Descrição em Linguagem Natural: {data:NaturalLangDescription}\n [35] - Má Reputação de IP Origem (Indicador): {abuseipdb:found} \n [36] - Má Reputação de IP Origem (Nível): {abuseipdb:abuse_confidence_score}\n [37] - Má Reputação de IP Origem (Domínio): {abuseipdb:domain} \n [38] - Má Reputação de IP Origem (Ocorrências): {abuseipdb:total_reports}  \n [39] - Má Reputação de IP Origem (Última ocorrência): {abuseipdb:last_reported_at}\n [40] - Tipo de IP Origem: {abuseipdb:usage_type} \n [41] - ISP de Origem: {abuseipdb:isp} \n [42] - Código de País do IP Origem: {abuseipdb:country_code}\n \n <b>MITIGAÇÃO:</b> \n 1. Aplicar políticas de restrição de execução do  uso do PowerShell via GPO e até desabilitar o PowerShell em servidores que não exigem seu uso administrativo diário.\n 2. Habilitar e Monitorar o PowerShell Logging, garantindo que a ativação dos logs e as regras de alerta do Siem estão bem definidas para esse tipo de evento.\n 3. Bloquear execuçoes suspeitas com técnicas de EDR  para  monitorar continuamente os dispositivos do usuário final  e responder a ameaças já inseridas ou que estão encaminhadas, como ransomware e malware.\n 4. Implementar ou revisar o  sistema de controle de permissividade das aplicações, ou seja, criar uma whitelist, de quais scripts e binários quando pré aprovados podem operar, evitando execução de fgerramentas como o PowerShell de locais não esperados.\n 5. Verificar a atualização das suas politicas de segurança e do Sistema Operacional (OS), migrando para sistemas suportados ou até mesmo aplicar "Hardening", diminuindo a superfície de ataque.\n \n <b>CONTENÇÃO:</b> \n 1. Assim que for confirmado ou fortemente suspeitado o uso malicioso de PowerShell e técnicas evasivas, a primeira medida é isolar o host, da rede\n 2. Por haver o risco do atacante já ter escalado privilégios, é de suma importância revogar as sessões e credenciais ativas no momento. Alterar senhas de contas locais e administrativas, especialmente se forem compartilhadas ou mal gerenciadas\n 3. Validar integridade de arquivos no caminho do PowerShell com hashes e timestamp além de encerrar qualquer instância dos terminais ativos.\n 4. Reiniciar o sistema e antes de reiniciar ou alterar o sistema, deve-se capturar dados de memória, processos e conexões para permitir análise forense posterior como lista de processos em execução ou conexões de rede abertas.\n 5. Aplicar políticas temporárias de contenção via GPO ou EDR além de aplicar a restrição às execuções de terminal.\n \n <b>CONCLUSÃO:</b> A detecção de uso ilegal de API pelo Trellix Endpoint Security indica claramente uma tentativa de execução maliciosa via PowerShell, empregando técnicas de evasão de segurança e uso de recursos legítimos do sistema para burlar os mecanismos de defesa. O uso de parâmetros de Politicas de execução em conjunto com uma chamada de API suspeita, revela um padrão compatível com táticas de Living off the Land (LotL) e execução fileless, estratégias típicas de agentes de ameaça avançados que buscam manter a discrição em ambientes corporativos.  As evidências apontam que o atacante já possui algum grau de acesso, com execução sob contexto do NT AUTHORITY\SYSTEM e está explorando esse acesso para persistência, movimento lateral e possível execução de comandos remotos via C2. A tentativa de mascarar as ações com binários assinados e ferramentas nativas, como powershell.exe e cmd.exe, mostra o uso de técnicas de ofuscação e mimetismo do comportamento administrativo.</p>",
